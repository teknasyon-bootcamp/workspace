version: '3.5'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  phpmyadmin:
    driver: ${VOLUMES_DRIVER}
  docker-in-docker:
    driver: ${VOLUMES_DRIVER}
  adminer:
    driver: ${VOLUMES_DRIVER}
  mongo:
    driver: ${VOLUMES_DRIVER}

services:
  php:
    build:
      context: ./docker/php
      args:
        - PHP_TAG_PREFIX=${PHP_TAG_PREFIX}
        - PHP_VERSION=${PHP_VERSION}
        - PUID=${PHP_PUID}
        - PGID=${PHP_PGID}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ./docker/php/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
      - ${APP_CODE_PATH}:${APP_CODE_TARGET_PATH}${APP_CODE_TARGET_FLAG}
      - docker-in-docker:/certs/client
    ports:
      - "${PHP_XDEBUG_PORT}:9003"
    expose:
      - "9000"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    environment:
      - DOCKER_HOST=tcp://docker-in-docker:2376
      - DOCKER_TLS_VERIFY=1
      - DOCKER_TLS_CERTDIR=/certs
      - DOCKER_CERT_PATH=/certs/client
    networks:
      - backend
    links:
      - docker-in-docker

  nginx:
    build:
      context: ./docker/nginx
      args:
        - PHP_UPSTREAM_CONTAINER=php
        - PHP_UPSTREAM_PORT=9000
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ${APP_CODE_PATH}:${APP_CODE_TARGET_PATH}${APP_CODE_TARGET_FLAG}
      - ${NGINX_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl
    ports:
      - "${NGINX_HTTP_PORT}:80"
      - "${NGINX_HTTPS_PORT}:443"
    depends_on:
      - php
    networks:
      - frontend
      - backend

  mariadb:
    build:
      context: ./docker/mariadb
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ${DATA_PATH}/mariadb:/var/lib/mysql
      - ${MARIADB_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MARIADB_PORT}:3306"
    environment:
      - TZ=${TIMEZONE}
      - MYSQL_DATABASE=${MARIADB_DATABASE}
      - MYSQL_USER=${MARIADB_USER}
      - MYSQL_PASSWORD=${MARIADB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    networks:
      - backend

  mongo:
    build: ./docker/mongo
    ports:
      - "${MONGODB_PORT}:27017"
    volumes:
      - ${DATA_PATH}/mongodb/db:/data/db
      - ${DATA_PATH}/mongodb/configdb:/data/configdb
    networks:
      - backend

  mongo-webui:
    image: mongoclient/mongoclient
    environment:
      - ROOT_URL=${MONGO_WEBUI_ROOT_URL}
      - MONGO_URL=${MONGO_WEBUI_MONGO_URL}
    volumes:
      - ${DATA_PATH}/mongo-webui:/data/db
    ports:
      - "${MONGO_WEBUI_PORT}:3000"
    networks:
      - backend
      - frontend
    depends_on:
      - mongo

  phpmyadmin:
    build: ./docker/phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - MYSQL_USER=${PMA_USER}
      - MYSQL_PASSWORD=${PMA_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${PMA_ROOT_PASSWORD}
      - MAX_EXECUTION_TIME=${PMA_MAX_EXECUTION_TIME}
      - MEMORY_LIMIT=${PMA_MEMORY_LIMIT}
      - UPLOAD_LIMIT=${PMA_UPLOAD_LIMIT}
    ports:
      - "8081:80"
    depends_on:
      - mariadb
    networks:
      - frontend
      - backend

  adminer:
    build: ./docker/adminer
    environment:
      - ADMINER_PLUGINS=${ADM_PLUGINS}
      - ADMINER_DESIGN=${ADM_DESIGN}
      - ADMINER_DEFAULT_SERVER=${ADM_DEFAULT_SERVER}
    ports:
      - "${ADM_PORT}:8080"
    depends_on:
      - php
    networks:
      - frontend
      - backend

  docker-in-docker:
    image: docker:19.03-dind
    environment:
      DOCKER_TLS_SAN: DNS:docker-in-docker
    privileged: true
    volumes:
      - ${APP_CODE_PATH}:${APP_CODE_TARGET_PATH}
      - docker-in-docker:/certs/client
    expose:
      - 2375
    networks:
      - backend
